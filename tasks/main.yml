---
- block:

  - name: Check if present
    stat:
      path: "{{ drn_binary }}"
    register: drn_present

  - debug: msg="netdata not installed"
    when: drn_present.stat.exists == False

  - debug: msg="netdata installed"
    when: drn_present.stat.exists == True

  - name: Install package dependencies
    apt:
      name: "{{ drn_deps }}"
    when: drn_present.stat.exists == False

  - name: Fetching netdata from git
    git:
      repo: https://github.com/firehol/netdata.git
      dest: "{{ drn_sources_dir }}"
      version: "{{ drn_version }}"
      force: yes
    register: clone_or_pull

  - name: Build and install
    shell: "./netdata-installer.sh --install {{ drn_install_dir }} --dont-wait"
    args:
      chdir: "{{ drn_sources_dir }}"
    when: clone_or_pull.changed == True
    notify: stop service

  - name: Creating config
    template:
     src: '{{item}}.j2'
     dest: '{{ drn_install_dir }}/netdata/etc/netdata/{{item}}'
     force: yes
    with_items:
      - netdata.conf
      - stream.conf
    become: yes

  # - meta: flush_handlers

  - name: Copy service file
    command: cp {{ drn_sources_dir }}/system/{{drn_service}}.service /etc/systemd/system/{{drn_service}}.service
    # notify: start/restart netdata

  - service:
      name: "{{drn_service}}"
      state: restarted
      enabled: yes
    when: ansible_service_mgr == 'upstart'
  - systemd:
      state: restarted
      daemon_reload: yes
      enabled: yes
      name: "{{ drn_service }}"
    when: ansible_service_mgr == 'systemd'
    
  when: drn_action is 'install'
  tags: netdata

- block:

  - systemd:
      state: stopped
      daemon_reload: yes
      enabled: no
      name: "{{ drn_service }}"
    when: ansible_service_mgr == 'systemd'
  # - file:
  #     path: "/etc/systemd/system/{{drn_service}}.service"
  #     state: absent


  when: drn_action is 'remove'
  tags: netdata
  



